image: quay.io/tike/alpine-oc-node

variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"

# Define a hidden job to be used with extends
# Better than default to avoid activating cache for all jobs
.dependencies_cache:
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm
    policy: pull

# Define the stages
stages:
  - setup
  - test
  - dependency-check
  - sonarqube-check
  - deploy

# Define the process for each stage

# Define the process for setup stage
setup:
  stage: setup
  tags:
    - ohtu-build-4
  script:
    - npm ci
  extends: .dependencies_cache
  cache:
    policy: pull-push
  artifacts:
    name: $CI_COMMIT_REF_NAME
    expire_in: 1h
    paths:
      - node_modules

test:
  stage: test
  tags:
    - ohtu-build-4
  script:
    - npm test

sonarqube-check:
  stage: sonarqube-check
  tags:
    - ohtu-build-4
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - master
  needs:
    - job: dependency-check
      artifacts: true

dependency-check:
  stage: dependency-check
  only:
    - master
  tags:
    - ohtu-build-4
  image:
    name: owasp/dependency-check-action:latest
    entrypoint: [""]
  script:
    - >
      /usr/share/dependency-check/bin/dependency-check.sh
      --project orgrek-backend --scan .
      --format JSON --format HTML -nvdApiKey $NVD_API_KEY
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - dependency-check-report.json
      - dependency-check-report.html

deploy_dev:
  stage: deploy
  tags:
    - ohtu-build-4
  environment:
    name: development
  only:
    - master
  except:
    # Skip deploy when scheduled npm audit and outdated scans are executed.
    - schedules
  script:
    # set home path for openshift 1001 user
    - export HOME=/home/1001
    # before any action, I connect to the OpenShift server with the appropriate credentials
    - oc login https://$OPENSHIFT_ADDR_TEST:$OPENSHIFT_PORT --token=$OPENSHIFT_TOKEN_TEST
    - oc project organisaatiorekisteri
    # add secrets here
    - oc delete secret generic hy-organisation-api-key --ignore-not-found
    - oc create secret generic hy-organisation-api-key --from-literal=HY_ORGANISATION_API_KEY=$HY_ORGANISATION_TEST_API_KEY
    # list environment variables here
    - oc set env --from=secret/hy-organisation-api-key deploy/organisaatiorekisteri-backend-dev
    - oc set env deploy/organisaatiorekisteri-backend-dev API_GATEWAY_HOST=$API_GATEWAY_HOST_DEV
    - oc set env deploy/organisaatiorekisteri-backend-dev API_DB_HOST=$API_DB_HOST_DEV
    - oc set env deploy/organisaatiorekisteri-backend-dev API_OU_SERVICE_HOST=$API_OU_SERVICE_HOST_DEV
    - oc set env deploy/organisaatiorekisteri-backend-dev OPENSHIFT_NODEJS_IP=$OPENSHIFT_NODEJS_IP
    - oc set env deploy/organisaatiorekisteri-backend-dev OPENSHIFT_NODEJS_PORT=$OPENSHIFT_NODEJS_PORT
    - oc set env deploy/organisaatiorekisteri-backend-dev TZ="Europe/Helsinki"
    # start build process in OpenShift
    - oc start-build organisaatiorekisteri-backend-dev --from-dir=. --follow
    # patch openshift buildConfig file
    - oc patch bc/organisaatiorekisteri-backend-dev --patch '{"spec":{"successfulBuildsHistoryLimit":1}}'
    - oc patch bc/organisaatiorekisteri-backend-dev --patch '{"spec":{"failedBuildsHistoryLimit":1}}'
    # set pod memory quota to 100 MB and limit to 500 MB
    - oc set resources deploy/organisaatiorekisteri-backend-dev --limits=memory=500Mi --requests=memory=100Mi

deploy_test:
  stage: deploy
  tags:
    - ohtu-build-4
  except:
    # Skip deploy when scheduled npm audit and outdated scans are executed.
    - schedules
  environment:
    name: test
  only:
    - test
  script:
    # set home path for openshift 1001 user
    - export HOME=/home/1001
    # before any action, I connect to the OpenShift server with the appropriate credentials
    - oc login https://$OPENSHIFT_ADDR_TEST:$OPENSHIFT_PORT --token=$OPENSHIFT_TOKEN_TEST
    - oc project organisaatiorekisteri
    # add secrets here
    - oc delete secret generic hy-organisation-api-key --ignore-not-found
    - oc create secret generic hy-organisation-api-key --from-literal=HY_ORGANISATION_API_KEY=$HY_ORGANISATION_TEST_API_KEY
    # list any environment variables here
    - oc set env --from=secret/hy-organisation-api-key deploy/organisaatiorekisteri-backend-test
    - oc set env deploy/organisaatiorekisteri-backend-test API_GATEWAY_HOST=$API_GATEWAY_HOST_TEST
    - oc set env deploy/organisaatiorekisteri-backend-test API_DB_HOST=$API_DB_HOST_TEST
    - oc set env deploy/organisaatiorekisteri-backend-test API_OU_SERVICE_HOST=$API_OU_SERVICE_HOST_TEST
    - oc set env deploy/organisaatiorekisteri-backend-test OPENSHIFT_NODEJS_IP=$OPENSHIFT_NODEJS_IP
    - oc set env deploy/organisaatiorekisteri-backend-test OPENSHIFT_NODEJS_PORT=$OPENSHIFT_NODEJS_PORT
    - oc set env deploy/organisaatiorekisteri-backend-test TZ="Europe/Helsinki"
    - oc start-build organisaatiorekisteri-backend-test --from-dir=. --follow
    # patch openshift buildConfig file
    - oc patch bc/organisaatiorekisteri-backend-test --patch '{"spec":{"successfulBuildsHistoryLimit":1}}'
    - oc patch bc/organisaatiorekisteri-backend-test --patch '{"spec":{"failedBuildsHistoryLimit":1}}'
    # set pod memory quota to 100 MB and limit to 500 MB
    - oc set resources deploy/organisaatiorekisteri-backend-test --limits=memory=500Mi --requests=memory=100Mi

deploy_prod:
  stage: deploy
  tags:
    - ohtu-build-4
  except:
    # Skip deploy when scheduled npm audit and outdated scans are executed.
    - schedules
  environment:
    name: prod
  only:
    - prod
  script:
    # set home path for openshift 1001 user
    - export HOME=/home/1001
    # before any action, I connect to the OpenShift server with the appropriate credentials
    - oc login https://$OPENSHIFT_ADDR_PROD:$OPENSHIFT_PORT --token=$OPENSHIFT_TOKEN_PROD
    - oc project organisaatiorekisteri
    # add secrets here
    - oc delete secret generic hy-organisation-api-key --ignore-not-found
    - oc create secret generic hy-organisation-api-key --from-literal=HY_ORGANISATION_API_KEY=$HY_ORGANISATION_PROD_API_KEY
    # list any environment variables here
    - oc set env --from=secret/hy-organisation-api-key deploy/organisaatiorekisteri-backend-prod
    - oc set env deploy/organisaatiorekisteri-backend-prod API_GATEWAY_HOST=$API_GATEWAY_HOST_PROD
    - oc set env deploy/organisaatiorekisteri-backend-prod API_DB_HOST=$API_DB_HOST_PROD
    - oc set env deploy/organisaatiorekisteri-backend-prod API_OU_SERVICE_HOST=$API_OU_SERVICE_HOST_PROD
    - oc set env deploy/organisaatiorekisteri-backend-prod OPENSHIFT_NODEJS_IP=$OPENSHIFT_NODEJS_IP
    - oc set env deploy/organisaatiorekisteri-backend-prod OPENSHIFT_NODEJS_PORT=$OPENSHIFT_NODEJS_PORT
    - oc set env deploy/organisaatiorekisteri-backend-prod TZ="Europe/Helsinki"
    - oc start-build organisaatiorekisteri-backend-prod --from-dir=. --follow
    # patch openshift buildConfig file
    - oc patch bc/organisaatiorekisteri-backend-prod --patch '{"spec":{"successfulBuildsHistoryLimit":1}}'
    - oc patch bc/organisaatiorekisteri-backend-prod --patch '{"spec":{"failedBuildsHistoryLimit":1}}'
    # set pod memory quota to 100 MB and limit to 500 MB
    - oc set resources deploy/organisaatiorekisteri-backend-prod --limits=memory=500Mi --requests=memory=100Mi
